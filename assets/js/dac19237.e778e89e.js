"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[803],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>u});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),y=p(o),u=r,m=y["".concat(s,".").concat(u)]||y[u]||d[u]||a;return o?n.createElement(m,l(l({ref:t},c),{},{components:o})):n.createElement(m,l({ref:t},c))}));function u(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=o[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}y.displayName="MDXCreateElement"},8036:(e,t,o)=>{o.d(t,{F:()=>r});var n=o(7294);const r=e=>{let{typeVal:t,defaultVal:o}=e;return n.createElement("table",{className:"ApiTable"},n.createElement("tr",null,n.createElement("th",{align:"left"},"Type"),n.createElement("th",{align:"left"},"Default")),n.createElement("tr",null,n.createElement("td",{className:"ApiTable_cell"},t),n.createElement("td",null,o)))}},280:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=o(7462),r=(o(7294),o(3905)),a=o(8036);const l={sidebar_position:5,title:"Styles"},i=void 0,s={unversionedId:"api/styles",id:"api/styles",title:"Styles",description:"This prop allows you to modify styles of every component. However, if you only want to adjust only colors, you should use theme prop.",source:"@site/docs/api/styles.md",sourceDirName:"api",slug:"/api/styles",permalink:"/rn-emoji-keyboard/docs/api/styles",draft:!1,editUrl:"https://github.com/TheWidlarzGroup/rn-emoji-keyboard/tree/master/docs/docs/api/styles.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Styles"},sidebar:"api",previous:{title:"Theme",permalink:"/rn-emoji-keyboard/docs/api/theme"}},p={},c=[{value:"<code>styles</code>",id:"styles",level:3},{value:"Full list of styles properties",id:"full-list-of-styles-properties",level:2},{value:"<code>container</code>",id:"container",level:3},{value:"<code>header</code>",id:"header",level:3},{value:"<code>knob</code>",id:"knob",level:3},{value:"<code>category</code>",id:"category",level:3},{value:"<code>searchBar</code>",id:"searchbar",level:3},{value:"<code>emoji</code>",id:"emoji",level:3}],d={toc:c};function y(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This prop allows you to modify styles of every component. However, if you only want to adjust only colors, you should use ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/theme"},"theme")," prop."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Because of how library calculates rows and columns some styles may break the layout. You should avoid passing styles that changes the dimensions of components, especially the emoji.")),(0,r.kt)("h3",{id:"styles"},(0,r.kt)("inlineCode",{parentName:"h3"},"styles")),(0,r.kt)("p",null,"This is the name of property that has every component styles inside."),(0,r.kt)(a.F,{typeVal:"Record<string, ViewStyle>",defaultVal:"{}",mdxType:"ApiTable"}),(0,r.kt)("h2",{id:"full-list-of-styles-properties"},"Full list of styles properties"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You don't have to pass new styles for every component. The omitted ones will use default ",(0,r.kt)("strong",{parentName:"p"},"theme")," values.\nThese props won't work outside of styles prop.")),(0,r.kt)("h3",{id:"container"},(0,r.kt)("inlineCode",{parentName:"h3"},"container")),(0,r.kt)("p",null,"Set styles of the whole modal container."),(0,r.kt)(a.F,{typeVal:"ViewStyle",defaultVal:"{}",mdxType:"ApiTable"}),(0,r.kt)("h3",{id:"header"},(0,r.kt)("inlineCode",{parentName:"h3"},"header")),(0,r.kt)("p",null,"Set styles of header text. Header is the component containing category name."),(0,r.kt)(a.F,{typeVal:"TextStyle",defaultVal:"{}",mdxType:"ApiTable"}),(0,r.kt)("h3",{id:"knob"},(0,r.kt)("inlineCode",{parentName:"h3"},"knob")),(0,r.kt)("p",null,"Set styles of the modal knob."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Works only in the modal mode with knob enabled.")),(0,r.kt)(a.F,{typeVal:"ViewStyle",defaultVal:"{}",mdxType:"ApiTable"}),(0,r.kt)("h3",{id:"category"},(0,r.kt)("inlineCode",{parentName:"h3"},"category")),(0,r.kt)("p",null,"Set styles of the category component. You can pass different styles for the container and the icon."),(0,r.kt)(a.F,{typeVal:"{ container: ViewStyle, icon: TextStyle }",defaultVal:"{ container: {}, icon: {} }",mdxType:"ApiTable"}),(0,r.kt)("h3",{id:"searchbar"},(0,r.kt)("inlineCode",{parentName:"h3"},"searchBar")),(0,r.kt)("p",null,"Set styles of the searchBar component. You can pass different styles for the container and the text."),(0,r.kt)(a.F,{typeVal:"{ container: ViewStyle, text: TextStyle }",defaultVal:"{ container: {}, text: {} }",mdxType:"ApiTable"}),(0,r.kt)("h3",{id:"emoji"},(0,r.kt)("inlineCode",{parentName:"h3"},"emoji")),(0,r.kt)("p",null,"Set styles of the emoji component. You can pass styles for selected state."),(0,r.kt)(a.F,{typeVal:"{ selected: ViewStyle }",defaultVal:"{ selected: {} }",mdxType:"ApiTable"}))}y.isMDXComponent=!0}}]);